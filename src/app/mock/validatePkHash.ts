
import * as ecc from "tiny-secp256k1";

import ECPairFactory from "ecpair";
import { payments, Psbt } from "bitcoinjs-lib";
const bitcoin = require('bitcoinjs-lib');

const { networks, TransactionBuilder, script } = bitcoin;


// 使用的网络（这里使用比特币测试网，实际应用应选择正确的网络）
const network = networks.regtest;
bitcoin.initEccLib(ecc);
const ECPair = ECPairFactory(ecc);

// 导入私钥和公钥
const WIF = 'cVdXE4grxmNeLEjnMFqYTg7og7owy25cLBmwxodMMFhpPE1ki8S8';
const keyPair = ECPair.fromWIF(WIF, network);

// 创建 PSBT 实例
const psbt = new Psbt({ network });

// 添加输入
psbt.addInput({
  hash: '2f0170803a40a23320831ca501e9195affb21fa80325795fc7654aeef51365f5', // 事务 ID
  index: 0, // 输出索引
  nonWitnessUtxo: Buffer.from('0200000000011823d2238de33b57d23860cdad155790d84f697a44f8d4802922f241efe29a0a730000000000fdffffffc772d36c4d53570a0acbba76a5305f58e63cc8ff0f21af58b2c2bb65de6393f60000000000fdffffffd2d081a26924caf8e406c96e14596c28412c8933828049706125855ea17255940000000000fdffffffa73aed6ef568827348319da7db39c44673043eb2c418cd3b4742df17297199d00000000000fdffffff0b1d0d08c699f1c8065cc985afe2b0a5a0891a894d1ac324307abe019929afe00000000000fdffffff187eb5dad56504f8a224025a5def98819ca1dfe0c34216f96fbdbbb84d8e69a30000000000fdffffff1e67195f3a4a6331e3125d62950d151e9a8dde14b2cb0f21bedc168c835b4d1a0000000000fdffffff82aa6515fea780a0f97a4d22eff64e8779779a200337fad48b7529633c0a329e0000000000fdffffff616834600a3764fbe7006102105b21da68465956b5b62a035fefb3d308def95d0000000000fdffffff8818d0e9c64ba6f77d2fb16b3b65623f0264abc507f1acc7266c40198fb421090000000000fdffffff42d4d92bb3c381e8d5ecc88235e6b8cae4dc07447891ce6bdcde1dea6e4fc9ce0000000000fdffffff3bb6e2c5cac26ca3605bd6d38b3741f8bf706e6d6d12937c993c302b89408f510000000000fdffffffe21533e1d2e4f74827e82c49edfe9b98bd34400e0f8d8a2f7d7fc49bfcc58d410000000000fdffffff90bcd891491995716fa31ce76b03386d5b95f5e94c6c5682a1e47308bc359c820000000000fdffffffa823b36abe1c607e305c2333d993f0f84033a53bdb0a9c7a2ed3cb0ee220709a0000000000fdffffffa96c1c8c961f262378b91daac0411aa7d18c2a0dd47603fc1fade024a9d9f60b0000000000fdffffffc2351ff667e9835ecee5d97cdb2b2640d967b95bf170f41b8260f4cab072ab4f0000000000fdffffffd5e16783c0ebe9e1990fbbbd7a313a039f4dfec6caf668edf418defa199a23b90000000000fdffffffb33c1bd7fe547be7d91fe374531dfc95f04db95a4d819f0fdd256fc0f895bbf60000000000fdffffff2115fef3a98e6fe1e21bb799e51f44304b7d424d811427f1e8efdc1dff769cf30000000000fdffffff337b8708dbc802fa7a57303b227f4a807a3f18d87af635c325392f71b41919030000000000fdffffff939323863f9ca0e5352109934f08c88b373565d07e5329a4f76bab0893c1659b0000000000fdffffff9000083dee75162587ae302ec8e6c30662fc7945adde6bb31f5063cf95ddffd70000000000fdffffff4ea0af34333498fc293e96dba9b98daaead69f38862a489d2564428e5a6124360000000000fdffffff0100e87648170000001600140670a92035ad0828f4a7b30f82fb6811e8d4af6202473044022033101928fe7b1f992a661bb48d5088939e6ab66c9d52b103d768b9239e0fae7a0220627623ba26f7e590b6fd7d12e10d00a8bcd48b37f9f1fc2318257ae7d141c6cb012102bdebdc7725309d11613301cedac928e36d1a1475a73f572cb3f71df6c7b604fc0247304402205a46bd77e39326a3952915e3da8b718c99e9c274bd8cdf5bc0d81eea3cf529510220571d9cdb18bf81856d5447d545652a455f9a144c996ed351eee2382919e31c35012102a3969e084dac08e9689cae93114ccc66336fa5f4fccd422a8217233873d6e74302473044022017ed943821df0bdc2f6d6652c95336aba8cf9ee6d4c991097ad905666912ab6a02201a9ee377eaee9e69a554521380b1aa1818c55356d40d9c85b2970a029eca39cf012102a3969e084dac08e9689cae93114ccc66336fa5f4fccd422a8217233873d6e743024730440220716a59fdbea3db2a70c4667fed6e390a8604c8e3ebfa7004cae314c5ef8a69c402200402d8751f5e2e2a42bdc5a850b4017d81d3218d95986d3190c5f3070be0e8cb012102a3969e084dac08e9689cae93114ccc66336fa5f4fccd422a8217233873d6e7430247304402207e4662a60d25612623ac486ce37de70c091d401ca5b174eaa370b4cd2d7438af02206582511f7a50d7a49c02fbdc6ff42bbc815972b0567825cd0997549fa0b2cfd2012102a3969e084dac08e9689cae93114ccc66336fa5f4fccd422a8217233873d6e7430247304402200e4addfa00f7a011a39fa321dedef8f2d3bca233770e594eaee501409f06b89302203be42ac22b7e069e3425767879e0e84cf4e4f3a647ceca2c8df5f76b2cb7c969012102a3969e084dac08e9689cae93114ccc66336fa5f4fccd422a8217233873d6e74302473044022061e2aa67ec914545c304d42f65618a861cd4afdd5c14dff420d0d23e7b419186022003fbd9a34aa5ea5b8cc83ba247624228cad32b6eda4e254c626b758ae9c022c20121026407e1a3385a55824d1354f4e6c77a58568b3b31cd3dc059daf42ada49532193024730440220451c12379c40677a3f2e3142272bf708959cd2919bf91e190e957b0dfc4677aa02201bbf26512c7dbc84218b08ee571768b0f0bce676ff61b31a09a68cd7566b2867012102a3969e084dac08e9689cae93114ccc66336fa5f4fccd422a8217233873d6e74302473044022049d5a24eaba33c97fb17bcaf76c8b8db9ad3c68657ef928e9c95afeeece7e2e802202af722e5416b3378bb6136f7796df3656327cbc5aae43bd7619c791752342eb0012102a3969e084dac08e9689cae93114ccc66336fa5f4fccd422a8217233873d6e7430247304402201ff5e81b6a60bb38206b88880e12eef2c7e468c952d30f433ea35a8cf7c3303b02202d10fd79a624754add26cf3ae274ec42db4ff51d8fcd696c3625ca2827061138012102a3969e084dac08e9689cae93114ccc66336fa5f4fccd422a8217233873d6e74302473044022020fc3569461f56dfa85eaa4ea8cab632d3b9fde257420175b71958f47a11fe9e02202be876884a593f9940b2e7c11145fecd5c82854eb53cda029f8b820b110ad935012102a3969e084dac08e9689cae93114ccc66336fa5f4fccd422a8217233873d6e7430247304402200aa16720783b7c7eeaee70ee58b9497077a1334b6daf753e1457b9d40d62e8fc0220682d0f9a16c0e581ce1f8ac8a86871c8aebe82c514716418927f1a6c7db0d2d2012102a3969e084dac08e9689cae93114ccc66336fa5f4fccd422a8217233873d6e7430247304402207c35a3f2f0755a446aa8ad985b64a280eab6d72a0a1b01a15f95249397855b5f02202a011e8666bff36fe3d5f4300a7bc6c6538e9ba475ee126e6f4d08ad674d3f66012102a3969e084dac08e9689cae93114ccc66336fa5f4fccd422a8217233873d6e743024730440220031ebf9a6992247499988300d6e54ccf3ea178f08bb1986a1a5e514030973fbb02204476183d15c5735d2eb56827ddedacc24b963f3b661310510b3e05f4cc721d04012102bdebdc7725309d11613301cedac928e36d1a1475a73f572cb3f71df6c7b604fc024730440220612282ad7cf0987e6a7490e5bc71a883d02fd59072e8c511996c6b3eafd00a9702205044c1d47eb6549d0ef0330294028c7a15b281f009ac4b88caa5a0272ad3bba2012102a3969e084dac08e9689cae93114ccc66336fa5f4fccd422a8217233873d6e7430247304402206f9adcd9779ba472ecb343ccf076d2eb70d3138f3d3b49a7fbd291c4f3b0bc3c022071c4d354988500f30402ba14645c0f8aee64e35030a53bebfdb106bd947b2c57012102a3969e084dac08e9689cae93114ccc66336fa5f4fccd422a8217233873d6e7430247304402201ca212eecfee78c07bc4bf2f6053daec4792c306d574f5b3466b3cca16b1b0a90220301bd9bb0429676b9a5b237b9591596fdfa67ee82e6f0872b0bd64ddb48a248e012102a3969e084dac08e9689cae93114ccc66336fa5f4fccd422a8217233873d6e74302473044022022863e0924d41bfe49cdc67f4ff5e1758ba9c0c8211fe8958c80306ebe9c3b000220666f096c3248a19e2e9a6d2786aae5945c83a122800280f785055afc0dddabb8012102a3969e084dac08e9689cae93114ccc66336fa5f4fccd422a8217233873d6e7430247304402201f4f8a90f269293699e33bfe65ab4f8721718fffb510e519527388cb1a464ff102203858a20c3937f9c9f3459ab362111b423d67fd8801897b397eff839b8f9b0b80012102384eb5818b0213cbb8f0d8e532e4c017d517a6fff8086f8ce8fb507b0fc750db0247304402201e44b21be8a4b8ae219047c2d98908f12403ddce82ac0416a20c0e9fb61802dd02205e7a2ed550221483bd9b7a76c8d485d495e5b81eeb5c72beb9f591e91610c8cb012102bdebdc7725309d11613301cedac928e36d1a1475a73f572cb3f71df6c7b604fc0247304402205ae561d7b9f2e6ef40b5c1b11d4fa00702718c54ab0b1d46dbeb7358025f17120220501d21b244dc52efe0c50ffe567657192a25ffee1e7f609f1b06d7b6c710abf8012102a3969e084dac08e9689cae93114ccc66336fa5f4fccd422a8217233873d6e743024730440220333706884ec27138f2ce2b3e4256187b3908dc964c400e61a480d6a3cd12afd902202d33988bd6dacb787a0b60dfb09654a584661de1ed2b7b48a72c6aac04b03dfa012102a3969e084dac08e9689cae93114ccc66336fa5f4fccd422a8217233873d6e7430247304402200d4bf73491673708b3db7fdd8dc7c2a04628aae4917ba9e004db50bfea0aeb2a022012887194ebc1a0758aac6fac4f29b55b22400147c066b55ec7f8ead2bfec1ef0012102a3969e084dac08e9689cae93114ccc66336fa5f4fccd422a8217233873d6e74302473044022009f37ded7592b9eda869261551c6f8f7769fddb47b06ed7b2ac6bda3695127c20220383c2774a7204569f857264718c4b1911567c4762598e998dacee2cfdc0a9915012102a3969e084dac08e9689cae93114ccc66336fa5f4fccd422a8217233873d6e7431a0d0000', 'hex') // 输入事务的完整 hex
});

// 添加输出
psbt.addOutput({
  address: 'bcrt1qfdgnd6ctxvgl3zj88ku9gp90zjv9w7e77vcpvr',
  value: 100,
});

// 获取需要签名的数据（假设你正在使用的是一个简单的 P2PKH）
const pubkey = keyPair.publicKey;
console.log('pubkey: ', pubkey.toString('hex'));
const { address } = payments.p2pkh({ pubkey, network });
console.log(`Address: ${address}`);

// 签名输入
psbt.signInput(0, keyPair);

// 完成输入签名
psbt.finalizeAllInputs();

// 提取最终交易
const transaction = psbt.extractTransaction();

// 打印交易的 hex
console.log(transaction.toHex());
